info
	@name Test
	@author Fickle

enum Sex
	@flags
	Male : 1
	Female : 2

enum Color
	Black : 0
	White : 1
	Red : 2
	Green : 3
	Blue : 4
	Yellow : 5
	Orange : 6
	Pink : 7
	Violet : 8
	Brown : 9
	Purple : 10

class Response
	
class UserResponse
	@extends Response
	User : User

class Person
	Id : uuid
	Name : string
	first_name : string
	Sexes : Sex[]
	SexesNullable : Sex?[]
	Partner : Person
	
class User
	@extends Person
	BestFriend : Person
	CashBalance : double
	Birthdate : datetime
	Password : string
	FavoriteColor : Color?
	Age : int
	LuckyUuids : uuid[]
	LuckyUuidsNullable : uuid?[]
	Friends : User[]
	TimeSinceLastLogin : timespan
	LoginTimes : timespan[]
	FollowerUserIds : uuid[]
	BankBalance : decimal?

gateway TestService
	@hostname fickle.kingstreetapps.com

	AddOne(value:int)
		@returnformat json
		@path /api/Test/AddOne?x={value}
		@method get
		@returns int

gateway UserService
	@hostname fickle.kingstreetapps.com

	SetUserSexes(id:uuid sexes:Sex?[])
		@returnformat json
		@contentformat form
		@path /api/UserService/SetUserSexes?id={id}
		@method post
		@content sexes
		@returns void

	PostUserSex(id:uuid sex:Sex)
		@returnformat json
		@contentformat json
		@path /api/UserService/PostUserSex
		@method post
		@content sex
		@returns void

	StoreUser(user:User)
		@returnformat json
		@contentformat form
		@path /api/UserService/StoreUser
		@method post
		@content user
		@returns void

	GetPerson(id:uuid)
		@returnformat json
		@path /api/UserService/Person/{id}
		@method get
		@returns Person

	UploadAvatar(id:uuid image:byte[])
		@returnformat json
		@path /api/UserService/UploadAvatar/{id}
		@method get
		@content image
		@returns Person

	GetUser(id:uuid fromDate:datetime)
		@returnformat json
		@path /api/UserService/User/{id}/{fromDate}
		@method get
		@returns Response

	GetUserLastLoginTime(id:uuid)
		@returnformat json
		@path /api/UserService/GetUserLastLoginTime?id={id}
		@method get
		@returns timespan

	GetUserIds(name:string)
		@returnformat json
		@path /api/UserService/GetUserId?name={name}
		@method get
		@returns uuid[]

	GetUserName(id:uuid)
		@returnformat json
		@path /api/UserService/GetUserName?id={id}
		@method get
		@returns string

	GetUserSex(id:uuid)
		@returnformat json
		@path /api/UserService/GetUserSex?UserId={id}
		@method get
		@returns Sex

	GetUserSexMaybe(id:uuid)
		@returnformat json
		@path /api/UserService/GetUserSexMaybe?UserId={id}
		@method get
		@returns Sex?

	GetUserSexes(id:uuid)
		@returnformat json
		@path /api/UserService/GetUserSexes?UserId={id}
		@method get
		@returns Sex[]

	GetUserFriends(id:uuid)
		@returnformat json
		@path /api/UserService/GetUserFriends?UserId={id}
		@method get
		@returns User[]

	SetUserSex(id:uuid value:Sex)
		@returnformat json
		@path /api/UserService/SetUserSex?UserId={id}&Sex={value}
		@method get
		@returns User

	SetUserNullableSex(id:uuid value:Sex?)
		@returnformat json
		@path /api/UserService/SetUserSex?UserId={id}&Sex={value}
		@method get
		@returns User

	GetUserAge(id:uuid)
		@returnformat json
		@path /api/UserService/GetUserSex?UserId={id}
		@method get
		@returns int?

	GetUserNoResponse(id:uuid fromDate:datetime)
		@returnformat json
		@path /api/UserService/User/{id}/{fromDate}
		@method get
		@returns User

	GetUserUserResponse(id:uuid fromDate:datetime)
		@returnformat json
		@path /api/UserService/User/{id}/{fromDate}
		@method get
		@returns UserResponse

	SetPassword(id:uuid password:String)
		@secure true
		@returnformat json
		@path /api/UserService/SetPassword?id={id}&password={password}
		@method get
		@returns string
